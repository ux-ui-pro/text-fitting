{"mappings":";;;;;;;;;;AAAe,uDAA0B;IACxC,aAAc;QACb,KAAK;QAEL,MAAM,aAAa,IAAI,CAAC,YAAY,CAAC;YAAE,MAAM;QAAO;QAEpD,WAAW,SAAS,GAAG,CAAC,6DAA6D,CAAC;QAEtF,IAAI,CAAC,IAAI,GAAG,WAAW,aAAa,CAAC;QACrC,IAAI,CAAC,IAAI,GAAG,WAAW,aAAa,CAAC;QACrC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI;QACnC,IAAI,CAAC,EAAE,GAAG,IAAI;QACd,IAAI,CAAC,cAAc,GAAG,IAAI,eAAe,IAAI,CAAC,MAAM;IACrD;IAEA,OAAO;QACN,SAAS,KAAK,CAAC,gBAAgB,CAAC,eAAe,IAAI,CAAC,MAAM;QAC1D,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI;IACtC;IAEA,SAAS;QACR,IAAI,IAAI,CAAC,EAAE,EACV,qBAAqB,IAAI,CAAC,EAAE;QAG7B,IAAI,CAAC,EAAE,GAAG,sBAAsB,IAAM;YACrC,MAAM,eAAe,SAAS,iBAAiB,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE;YACpE,MAAM,eAAe,KAAK,KAAK,CAAC,AAAC,IAAI,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,GAAI;YAElF,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBAAE,SAAS;gBAAQ,gBAAgB;YAAS;YAC3E,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBAAE,YAAY;gBAAU,UAAU,CAAC,EAAE,aAAa,EAAE,CAAC;YAAC;QACtF;IACD;IAEA,UAAU;QACT,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI;QACvC,SAAS,KAAK,CAAC,mBAAmB,CAAC,eAAe,IAAI,CAAC,MAAM;QAC7D,IAAI,CAAC,EAAE,GAAG,IAAI;QAEd,IAAI,IAAI,CAAC,aAAa,EAAE;YACvB,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBAAE,SAAS;gBAAI,gBAAgB;YAAG;YACjE,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;gBAAE,UAAU;gBAAI,YAAY;YAAG;QAC/D,CAAC;IACF;IAEA,oBAAoB;QACnB,IAAI,CAAC,MAAM;QACX,IAAI,CAAC,IAAI;IACV;IAEA,uBAAuB;QACtB,IAAI,CAAC,OAAO;IACb;AACD;AAEA,eAAe,GAAG,CAAC,mBAAmB,eAAe,MAAM,CAAC,gBAAgB","sources":["src/index.js"],"sourcesContent":["export default class TextFitting extends HTMLElement {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\r\n\t\tconst shadowOpen = this.attachShadow({ mode: 'open' })\r\n\r\n\t\tshadowOpen.innerHTML = `<div class=\"wrap\"><div class=\"body\"><slot></slot></div></div>`\r\n\r\n\t\tthis.wrap = shadowOpen.querySelector('.wrap')\r\n\t\tthis.body = shadowOpen.querySelector('.body')\r\n\t\tthis.update = this.update.bind(this)\r\n\t\tthis.af = null\r\n\t\tthis.resizeObserver = new ResizeObserver(this.update)\r\n\t}\r\n\r\n\tinit() {\r\n\t\tdocument.fonts.addEventListener('loadingdone', this.update)\r\n\t\tthis.resizeObserver.observe(this.wrap)\r\n\t}\r\n\r\n\tupdate() {\r\n\t\tif (this.af) {\r\n\t\t\tcancelAnimationFrame(this.af)\r\n\t\t}\r\n\r\n\t\tthis.af = requestAnimationFrame(() => {\r\n\t\t\tconst bodyFontSize = parseInt(getComputedStyle(this.body).fontSize, 10)\r\n\t\t\tconst calcFontSize = Math.floor((this.wrap.clientWidth / this.body.scrollWidth) * bodyFontSize)\r\n\r\n\t\t\tObject.assign(this.wrap.style, { display: 'flex', justifyContent: 'center' })\r\n\t\t\tObject.assign(this.body.style, { whiteSpace: 'nowrap', fontSize: `${calcFontSize}px` })\r\n\t\t})\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.resizeObserver.unobserve(this.wrap)\r\n\t\tdocument.fonts.removeEventListener('loadingdone', this.update)\r\n\t\tthis.af = null\r\n\r\n\t\tif (this.parentElement) {\r\n\t\t\tObject.assign(this.wrap.style, { display: '', justifyContent: '' })\r\n\t\t\tObject.assign(this.body.style, { fontSize: '', whiteSpace: '' })\r\n\t\t}\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t\tthis.update()\r\n\t\tthis.init()\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tthis.destroy()\r\n\t}\r\n}\r\n\r\ncustomElements.get('text-fitting') || customElements.define('text-fitting', TextFitting)"],"names":[],"version":3,"file":"index.js.map"}