/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _text_fitting_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./text-fitting.js */ \"./src/js/text-fitting.js\");\n\n\n(0,_text_fitting_js__WEBPACK_IMPORTED_MODULE_0__.TextFitting)()\n\n\n//# sourceURL=webpack://text-fitting/./src/js/index.js?");

/***/ }),

/***/ "./src/js/text-fitting.js":
/*!********************************!*\
  !*** ./src/js/text-fitting.js ***!
  \********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TextFitting\": () => (/* binding */ TextFitting)\n/* harmony export */ });\nclass TextFitting extends HTMLElement {\n    constructor() {\n        super()\n\n        const shadowOpen = this.attachShadow({mode: 'open'})\n\n        shadowOpen.innerHTML = `<div class=\"client\"><div class=\"scroll\"><slot></slot></div></div>`\n\n        this.client = shadowOpen.querySelector('.client')\n        this.scroll = shadowOpen.querySelector('.scroll')\n        this.update = this.update.bind(this)\n\n        this.scroll.style.cssText = `display: inline-block; white-space: nowrap;`\n\n        addEventListener('resize', this.update)\n\n        if (document.fonts) {\n            document.fonts.addEventListener('loadingdone', this.update)\n        }\n    }\n\n    disconnectedCallback() {\n        removeEventListener('resize', this.update)\n\n        if (document.fonts) {\n            document.fonts.removeEventListener('loadingdone', this.update)\n        }\n    }\n\n    update() {\n        cancelAnimationFrame(this.af)\n\n        this.af = requestAnimationFrame(() => {\n            let fontSize = parseInt(getComputedStyle(this.scroll).fontSize, 10),\n                width = ((this.client.clientWidth / this.scroll.scrollWidth) * fontSize).toFixed(0) + 'px'\n\n            this.scroll.style.fontSize = `${width}`\n        })\n    }\n\n    connectedCallback() {\n        this.update()\n    }\n}\n\ncustomElements.get('text-fitting') || customElements.define('text-fitting', TextFitting)\n\n\n//# sourceURL=webpack://text-fitting/./src/js/text-fitting.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/js/index.js");
/******/ 	
/******/ })()
;