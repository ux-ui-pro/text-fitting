(()=>{"use strict";class t extends HTMLElement{constructor(){super();const t=this.attachShadow({mode:"open"});t.innerHTML='<div class="client"><div class="scroll"><slot></slot></div></div>',this.client=t.querySelector(".client"),this.scroll=t.querySelector(".scroll"),this.update=this.update.bind(this),this.scroll.style.cssText="display: inline-block; white-space: nowrap;",addEventListener("resize",this.update),document.fonts&&document.fonts.addEventListener("loadingdone",this.update)}disconnectedCallback(){removeEventListener("resize",this.update),document.fonts&&document.fonts.removeEventListener("loadingdone",this.update)}update(){cancelAnimationFrame(this.af),this.af=requestAnimationFrame((()=>{let t=parseInt(getComputedStyle(this.scroll).fontSize,10),e=(this.client.clientWidth/this.scroll.scrollWidth*t).toFixed(0)+"px";this.scroll.style.fontSize=`${e}`}))}connectedCallback(){this.update()}}customElements.get("text-fitting")||customElements.define("text-fitting",t),t()})();