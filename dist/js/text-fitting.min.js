(()=>{"use strict";class t extends HTMLElement{constructor(){super();const t=this.attachShadow({mode:"open"});t.innerHTML='<div class="wrap"><div class="body"><slot></slot></div></div>',this.wrap=t.querySelector(".wrap"),this.body=t.querySelector(".body"),this.update=this.update.bind(this),this.body.style.cssText="display: inline-block; white-space: nowrap;",addEventListener("resize",this.update),document.fonts.addEventListener("loadingdone",this.update)}connectedCallback(){this.update()}disconnectedCallback(){removeEventListener("resize",this.update),document.fonts.removeEventListener("loadingdone",this.update)}update(){cancelAnimationFrame(this.af),this.af=requestAnimationFrame((()=>{let t=parseInt(getComputedStyle(this.body).fontSize,10),e=Math.ceil(this.wrap.clientWidth/this.body.scrollWidth*t)+"px";this.body.style.fontSize=`${e}`}))}}customElements.get("text-fitting")||customElements.define("text-fitting",t),new t})();